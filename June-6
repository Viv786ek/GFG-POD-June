long long countKdivPairs(int A[], int n, int K)
    {
        // Making an unordered map to store all the mod values possible
        unordered_map<int, int> mp;
        for(int i = 0; i < K; i++){
            //Initially all mod values have frequencies zero
            mp[i] = 0;
        }
        //Iterating through the array and increasing the frequency of the A[i]modK
        for(int i = 0; i < n; i++){
            mp[A[i] % K]++;
        }
        //cnt as our ans  and initializing it to 0
        long long cnt = 0;
        //For each mod in the map, there can be two possible case
        for(auto &e: mp){
            int val = e.first;
            
            //if valmodK == 0 (for example 4mod4) or valmodK == (K-val)modK (for example 2mod4 == 2)
            if(K - val == val || K - val == K){
                cnt += mp[val]*(mp[val] - 1)/2;
            }
            //Otherwise
            else{
                cnt += mp[val]*(mp[K - val]);
            }
            mp[val] = 0;
            mp[K - val] = 0;
        }
        return cnt;
    }
